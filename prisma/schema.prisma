// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique @db.VarChar(50)
  password String    @db.VarChar(255)
  userlogo String?   @db.VarChar(255)
  isadmin  Boolean   @default(false)
  readings Reading[]
}

model Manga {
  id               Int      @id @default(autoincrement())
  title            String   @db.VarChar(50)
  status           String   @db.VarChar(50)
  description      String?  @db.Text
  author           String?  @db.VarChar(100)
  genre            String?  @db.VarChar(100)
  coverImage       String?  @db.VarChar(255)
  publication_year DateTime?
  tomes            Tome[]
}

model Tome {
  id         Int       @id @default(autoincrement())
  numero     Int
  prix       Decimal   @db.Decimal(15, 2)
  editeur    String    @db.VarChar(50)
  coverImage String?   @db.VarChar(255)
  mangaId    Int
  manga      Manga     @relation(fields: [mangaId], references: [id])
  readings   Reading[]
}

model Reading {
  userId Int
  tomeId Int
  user   User @relation(fields: [userId], references: [id])
  tome   Tome @relation(fields: [tomeId], references: [id])
  rating Float?

  @@id([userId, tomeId])
}
